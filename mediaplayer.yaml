#cloud-config
autoinstall:
  version: 1
  locale: en_US
  keyboard:
    layout: us
  
  # Set the timezone (removed duplicate from user-data)
  timezone: "America/New_York"

  # Set local user account and sudo
  users:
    - name: mediaplayer
      gecos: "Media Player"
      primary_group: sudo
      groups: sudo
      shell: /bin/bash
      sudo: ['ALL=(ALL) NOPASSWD:ALL']
      # Generated password hash
      passwd: $y$j9T$8uIXvuze3QyhRz.9eNEZ//$EJ3XdChucz3HXxx0E7CgIuwAesx5wHq6rpHhmN1WmS6
    
  ssh:
    install-server: true
    allow-pw: true
    
  packages:
    - ubuntu-desktop-minimal
    - openssh-server
    - net-tools
    - curl
    - htop
    - vim
    
  storage:
    config:
      - type: disk
        id: disk-0
        match:
          size: largest
        
      # Create GPT partition table
      - type: gpt
        id: gpt-0
        device: disk-0
        
      # EFI partition (1GB)
      - type: partition
        id: efi-partition
        device: gpt-0
        size: 1G
        flag: boot
        grub_device: true
        
      # Format EFI partition
      - type: format
        id: efi-format
        volume: efi-partition
        fstype: fat32
        
      # Mount EFI partition
      - type: mount
        id: efi-mount
        device: efi-format
        path: /boot/efi
        
      # Create Physical Volume
      - type: partition
        id: lvm-partition
        device: gpt-0
        size: -1  # Use remaining space
        
      # Create Physical Volume
      - type: lvm_volgroup
        id: vg0
        name: vg0
        devices:
          - lvm-partition
          
      # Create Logical Volumes
      - type: lvm_partition
        id: lv-root
        name: root
        volgroup: vg0
        size: 30G
        
      - type: lvm_partition
        id: lv-home
        name: home
        volgroup: vg0
        size: -1  # Use remaining space
        
      # Format root partition
      - type: format
        id: format-root
        volume: lv-root
        fstype: ext4
        
      # Format home partition
      - type: format
        id: format-home
        volume: lv-home
        fstype: ext4
        
      # Mount root partition
      - type: mount
        id: mount-root
        device: format-root
        path: /
        
      # Mount home partition
      - type: mount
        id: mount-home
        device: format-home
        path: /home
      
  user-data:
    disable_root: true
    
  late-commands:
    # Enable password authentication in SSH
    - sed -i 's/#PasswordAuthentication yes/PasswordAuthentication yes/' /target/etc/ssh/sshd_config
    - sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /target/etc/ssh/sshd_config
    
    # Create script to set hostname based on serial number
    - |
      cat << 'EOF' > /target/usr/local/bin/set-hostname-from-sn.sh
      #!/bin/bash
      
      # Try different methods to get serial number
      if [ -f /sys/class/dmi/id/product_serial ]; then
          SN=$(cat /sys/class/dmi/id/product_serial)
      elif dmidecode -s system-serial-number &>/dev/null; then
          SN=$(dmidecode -s system-serial-number)
      else
          # Fallback to using the system UUID if no serial number is found
          SN=$(dmidecode -s system-uuid)
      fi
      
      # Clean the serial number (remove spaces and special characters)
      CLEAN_SN=$(echo "$SN" | tr -dc '[:alnum:]')
      
      # Set hostname to format: ds-{serial_number}
      NEW_HOSTNAME="ds-${CLEAN_SN,,}"
      
      # Set the hostname
      hostnamectl set-hostname "$NEW_HOSTNAME"
      
      # Update /etc/hosts
      sed -i "s/127.0.1.1.*/127.0.1.1\t$NEW_HOSTNAME/g" /etc/hosts
      EOF
    
    # Make script executable
    - chmod +x /target/usr/local/bin/set-hostname-from-sn.sh
    
    # Add script to run at first boot
    - |
      cat << 'EOF' > /target/etc/systemd/system/set-hostname.service
      [Unit]
      Description=Set Hostname Based on Serial Number
      After=network.target
      
      [Service]
      Type=oneshot
      ExecStart=/usr/local/bin/set-hostname-from-sn.sh
      RemainAfterExit=yes
      
      [Install]
      WantedBy=multi-user.target
      EOF
    
    # Enable the service
    - curtin in-target --target=/target -- systemctl enable set-hostname.service
    
  early-commands: []
    
  updates: security
  
  apt:
    geoip: true
    preserve_sources_list: false
    primary:
      - arches: [amd64]
        uri: "http://archive.ubuntu.com/ubuntu"